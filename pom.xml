<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.hotels</groupId>
    <artifactId>hotels-oss-parent</artifactId>
    <version>4.2.0</version>
  </parent>

  <groupId>com.hotels.road</groupId>
  <artifactId>road-parent</artifactId>
  <version>6.0.21</version>
  <packaging>pom</packaging>
  <inceptionYear>2016</inceptionYear>
  <description>
    The Data Highway is a service that allows data to be easily landed and consumed via REST interfaces which accept
    and produce JSON messages. The data is first defined using a schema and a "road" is created which will accept data
    messages that conform to this schema. Producers of data sets thus only need to define the structure of their data
    and are then able to send their data to a REST endpoint and not be too concerned with what happens next. The Data
    Highway will ensure that this data is made available for downstream streaming consumption and also stored reliably
    in a "data lake" in the cloud for access by various end users.
  </description>

  <scm>
    <connection>scm:git:git@github.com:HotelsDotCom/data-highway.git</connection>
    <developerConnection>scm:git:git@github.com:HotelsDotCom/data-highway.git</developerConnection>
    <url>https://github.com/HotelsDotCom/data-highway</url>
    <tag>road-parent-6.0.21</tag>
  </scm>

  <properties>
    <avro.compatibility.version>2.1.1</avro.compatibility.version>
    <beeju.version>1.1.1</beeju.version>
    <jasvorno.version>1.1.1</jasvorno.version>
    <avro.version>1.8.2</avro.version>
    <awaitility.version>2.0.0</awaitility.version>
    <aws.version>1.11.275</aws.version>
    <cloudwatch-logback-appender.version>0.11.0</cloudwatch-logback-appender.version>
    <commons-compress.version>1.19</commons-compress.version>
    <commons-lang3.version>3.5</commons-lang3.version>
    <commons-logging.version>1.2</commons-logging.version>
    <commons-net.version>3.6</commons-net.version>
    <commons-io.version>1.3.2</commons-io.version>
    <guava.version>23.0</guava.version>
    <hadoop.version>2.6.0</hadoop.version>
    <hazelcast-kubernetes.version>1.3.1</hazelcast-kubernetes.version>
    <hazelcast-spring.version>3.11.1</hazelcast-spring.version>
    <hive.version>2.3.3</hive.version>
    <jacoco.version>0.8.1</jacoco.version>
    <s3mock.version>0.2.0</s3mock.version>
    <jcommander.version>1.58</jcommander.version>
    <json-patch.version>1.9</json-patch.version>
    <kafka.version>1.0.0</kafka.version>
    <kubernetes-client.version>3.1.8</kubernetes-client.version>
    <lastcommons-lang.version>3.1.1</lastcommons-lang.version>
    <logback.version>1.2.2</logback.version>
    <mockito.version>2.8.47</mockito.version>
    <reactor.version>3.1.2.RELEASE</reactor.version>
    <reactor-addons.version>3.1.3.RELEASE</reactor-addons.version>
    <slf4j.version>1.7.25</slf4j.version>
    <spring-boot.version>2.1.2.RELEASE</spring-boot.version>
    <springfox.version>2.8.0</springfox.version>
    <wiremock.version>2.15.0</wiremock.version>

    <docker.repo>hotelsdotcom</docker.repo>
    <docker.name>${project.artifactId}</docker.name>
    <docker.tag>${project.version}</docker.tag>
    <docker.to.image>${docker.repo}/${docker.name}:${docker.tag}</docker.to.image>
    <docker.container.port>8080</docker.container.port>
    <jib.goal>build</jib.goal>

    <jdk.version>1.8</jdk.version>
  </properties>

  <modules>
    <module>agent/loading-bay</module>
    <module>agent/tollbooth</module>
    <module>agent/towtruck</module>
    <module>agent/traffic-control</module>
    <module>client/offramp</module>
    <module>client/onramp</module>
    <module>common/boot</module>
    <module>common/controllers</module>
    <module>common/exceptions</module>
    <module>common/io</module>
    <module>common/kafka-store</module>
    <module>common/maven-version</module>
    <module>common/model</module>
    <module>common/notifications</module>
    <module>common/partition</module>
    <module>common/pii</module>
    <module>common/s3</module>
    <module>common/schema</module>
    <module>common/security</module>
    <module>common/swagger</module>
    <module>common/tls</module>
    <module>common/traffic-cop</module>
    <module>common/user-agent</module>
    <module>endpoint/offramp</module>
    <module>endpoint/onramp</module>
    <module>endpoint/paver</module>
    <module>monitoring/highway-patrol</module>
    <module>monitoring/kafka-offset-metrics</module>
    <module>monitoring/weigh-bridge</module>
    <module>test/endpoints-tests</module>
    <module>test/test-drive</module>
    <module>tool/cli</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.hotels</groupId>
        <artifactId>avro-compatibility</artifactId>
        <version>${avro.compatibility.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hotels</groupId>
        <artifactId>beeju</artifactId>
        <version>${beeju.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty.aggregate</groupId>
            <artifactId>jetty-all</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.hotels</groupId>
        <artifactId>jasvorno</artifactId>
        <version>${jasvorno.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-core</artifactId>
        <version>${aws.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-logs</artifactId>
        <version>${aws.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-s3</artifactId>
        <version>${aws.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-sns</artifactId>
        <version>${aws.version}</version>
      </dependency>
      <dependency>
        <groupId>com.beust</groupId>
        <artifactId>jcommander</artifactId>
        <version>${jcommander.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.fge</groupId>
        <artifactId>json-patch</artifactId>
        <version>${json-patch.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock-standalone</artifactId>
        <version>${wiremock.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast-spring</artifactId>
        <version>${hazelcast-spring.version}</version>
      </dependency>
      <dependency>
        <groupId>com.lightstreamer</groupId>
        <artifactId>cloudwatch-logback-appender</artifactId>
        <version>${cloudwatch-logback-appender.version}</version>
      </dependency>
      <dependency>
        <!-- spring-boot-dependencies excludes this, required where we use httpclient -->
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>${commons-net.version}</version>
      </dependency>
      <dependency>
        <groupId>fm.last.commons</groupId>
        <artifactId>lastcommons-lang</artifactId>
        <version>${lastcommons-lang.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client</artifactId>
        <version>${kubernetes-client.version}</version>
      </dependency>
      <dependency>
        <groupId>io.findify</groupId>
        <artifactId>s3mock_2.11</artifactId>
        <version>${s3mock.version}</version>
      </dependency>
      <dependency>
        <groupId>io.projectreactor</groupId>
        <artifactId>reactor-core</artifactId>
        <version>${reactor.version}</version>
      </dependency>
      <dependency>
        <groupId>io.projectreactor</groupId>
        <artifactId>reactor-test</artifactId>
        <version>${reactor.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.projectreactor.addons</groupId>
        <artifactId>reactor-extra</artifactId>
        <version>${reactor-addons.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-core</artifactId>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hive</groupId>
        <artifactId>hive-common</artifactId>
        <version>${hive.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty.aggregate</groupId>
            <artifactId>jetty-all</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty.orbit</groupId>
            <artifactId>javax.servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-orc</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hive</groupId>
        <artifactId>hive-metastore</artifactId>
        <version>${hive.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
          </exclusion>
          <exclusion>
            <groupId>co.cask.tephra</groupId>
            <artifactId>tephra-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>co.cask.tephra</groupId>
            <artifactId>tephra-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>co.cask.tephra</groupId>
            <artifactId>tephra-hbase-compat-1.0</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>connect-runtime</artifactId>
        <version>${kafka.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_2.11</artifactId>
        <version>${kafka.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_2.11</artifactId>
        <version>${kafka.version}</version>
        <classifier>test</classifier>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka.version}</version>
        <classifier>test</classifier>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-streams</artifactId>
        <version>${kafka.version}</version>
        <classifier>test</classifier>
        <exclusions>
          <exclusion>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-json</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast-kubernetes</artifactId>
        <version>${hazelcast-kubernetes.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>0.10.1</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>${jib.goal}</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <from>
              <image>openjdk:11.0.1-jdk-slim</image>
            </from>
            <to>
              <image>${docker.to.image}</image>
            </to>
            <container>
              <jvmFlags>
                <jvmFlag>-XX:InitialRAMPercentage=75</jvmFlag>
                <jvmFlag>-XX:MaxRAMPercentage=75</jvmFlag>
              </jvmFlags>
              <ports>
                <port>${docker.container.port}</port>
              </ports>
              <labels>
                <maintainer>data-highway@expedia.com</maintainer>
              </labels>
            </container>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
  </repositories>

</project>
